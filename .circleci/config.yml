version: 2.1

jobs:
  build-service:
    docker:
      - image: alexfalkowski/go:2.61
      - image: postgres:17-bookworm
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
      - image: grafana/mimir:latest
        command: -server.http-listen-port=9009 -auth.multitenancy-enabled=false -ingester.ring.replication-factor=1
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: make source-key
      - run: dockerize -wait tcp://localhost:5432 -wait tcp://localhost:9009 -timeout 1m
      - restore_cache:
          name: restore go cache
          keys:
            - migrieren-go-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-version" }}-{{ checksum ".source-key" }}
            - migrieren-go-cache-
      - restore_cache:
          name: restore ruby cache
          keys:
            - migrieren-ruby-cache-{{ checksum "test/Gemfile.lock" }}-{{ checksum "~/.ruby-version" }}-{{ checksum ".source-key" }}
            - migrieren-ruby-cache-
      - run: make clean
      - run: make dep
      - save_cache:
          name: save go cache
          key: migrieren-go-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-version" }}-{{ checksum ".source-key" }}
          paths:
            - ~/go/pkg/mod
      - save_cache:
          name: save ruby cache
          key: migrieren-ruby-cache-{{ checksum "test/Gemfile.lock" }}-{{ checksum "~/.ruby-version" }}-{{ checksum ".source-key" }}
          paths:
            - test/vendor
      - restore_cache:
          name: restore go build cache
          keys:
            - migrieren-go-build-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-version" }}-{{ checksum ".source-key" }}
            - migrieren-go-build-cache-
      - restore_cache:
          name: restore go lint cache
          keys:
            - migrieren-go-lint-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-lint-version" }}-{{ checksum ".source-key" }}
            - migrieren-go-lint-cache-
      - run: make clean
      - run: make lint
      - save_cache:
          name: save go lint cache
          key: migrieren-go-lint-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-lint-version" }}-{{ checksum ".source-key" }}
          paths:
            - ~/.cache/golangci-lint
      - run: make proto-breaking
      - run: make sec
      - run: make trivy-repo
      - run: make features
      - run: make benchmarks
      - run: make analyse
      - save_cache:
          name: save go build cache
          key: migrieren-go-build-cache-{{ checksum "go.sum" }}-{{ checksum "~/.go-version" }}-{{ checksum ".source-key" }}
          paths:
            - ~/.cache/go-build
      - run: make coverage
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
      - run: make codecov-upload
    resource_class: large
  version:
    docker:
      - image: alexfalkowski/release:5.14
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: version
    resource_class: large
  build-docker-amd64:
    docker:
      - image: alexfalkowski/go:2.61
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make platform=amd64 build-docker
      - run: make platform=amd64 trivy-image
    resource_class: large
  build-docker-arm64:
    docker:
      - image: alexfalkowski/go:2.61
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make platform=arm64 build-docker
      - run: make platform=arm64 trivy-image
    resource_class: arm.medium
  push-docker-amd64:
    docker:
      - image: alexfalkowski/go:2.61
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: make pull
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: make login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run: make platform=amd64 push-docker
    resource_class: large
  push-docker-arm64:
    docker:
      - image: alexfalkowski/go:2.61
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: make pull
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: make login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run: make platform=arm64 push-docker
    resource_class: arm.medium
  manifest-docker:
    docker:
      - image: alexfalkowski/go:2.61
    working_directory: ~/migrieren
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: make pull
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: make login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run: make manifest-docker
    resource_class: large

workflows:
  migrieren:
    max_auto_reruns: 3
    jobs:
      - build-service
      - build-docker-amd64:
          filters:
            branches:
              ignore: master
      - build-docker-arm64:
          filters:
            branches:
              ignore: master
      - version:
          context: gh
          requires:
            - build-service
          filters:
            branches:
              only: master
      - push-docker-amd64:
          context: docker
          requires:
            - version
          filters:
            branches:
              only: master
      - push-docker-arm64:
          context: docker
          requires:
            - version
          filters:
            branches:
              only: master
      - manifest-docker:
          context: docker
          requires:
            - push-docker-amd64
            - push-docker-arm64
          filters:
            branches:
              only: master
